version: "3.9"
services:
  # Runs the go-ethereum execution client with the specified, unlocked account and necessary
  # APIs to allow for proof-of-stake consensus via Prysm.
  geth:
    image: "ethereum/client-go:latest"
    command:
      - --http
      - --http.api=eth,net,web3,personal,txpool,admin,debug
      - --http.addr=0.0.0.0
      - --http.corsdomain=*
      - --http.rpcprefix=/
      - --ws
      - --ws.api=eth,net,web3,txpool,debug
      - --ws.addr=0.0.0.0
      - --ws.origins=*
      - --ws.rpcprefix=/
      - --authrpc.vhosts=*
      - --authrpc.addr=0.0.0.0
      - --authrpc.jwtsecret=/execution/jwtsecret
      - --datadir=/execution
      - --allow-insecure-unlock
      - --syncmode=full
      - --gcmode=archive
      - --networkid=772    
      #- --mine
      #- --miner.etherbase=0xbd877cb457a66eb883f4bfd9ce39d040dd0f6a9b
      - --unlock=0x123463a4b065722e99115d6c222f267d9cabb524
      - --password=/execution/geth_password.txt
      #- --metrics
      #- --metrics.influxdb
      #- --metrics.influxdb.endpoint=http://178.18.252.53:8086
      #- --metrics.influxdb.username=Indo
      #- --metrics.influxdb.password=Indoex11
      - --bootnodes=enode://8de640d84d23ea4d5376957d28174f9be70aac606e429976dc69c1e0994fdb23aff8bbbd2e240b0f783ac07cda15b7219d9326c1c10abf409cccbfe3d4e01e96@5.189.176.210:30303?discport=38899
    ports:
      - 8551:8551
      - 8545:8545
      - 30303:30303
      - 30301:30301
      - 3334:3334
    volumes:
      - ./execution:/execution
      - ./execution/geth_password.txt:/execution/geth_password.txt
      - ./jwtsecret:/execution/jwtsecret

  # Runs a Prysm beacon chain from a specified genesis state created in the previous step
  # and connects to go-ethereum in the same network as the execution client.
  # The account used in go-ethereum is set as the suggested fee recipient for transactions
  # proposed via the validators attached to the beacon node.
  beacon-chain:
    image: "gcr.io/prysmaticlabs/prysm/beacon-chain:latest"
    command:
      - --datadir=/consensus/beacondata
      # No peers to sync with in this testnet, so setting to 0
      - --p2p-host-ip=167.86.87.186
      - --min-sync-peers=0
      - --genesis-state=/consensus/genesis.ssz
      #- --bootstrap-node=\
      # The chain configuration file used for setting up Prysm
      - --chain-config-file=/consensus/config.yml
      # We specify the chain id used by our execution client
      - --chain-id=772
      - --rpc-host=0.0.0.0
      - --contract-deployment-block=0
      - --grpc-gateway-host=0.0.0.0
      - --execution-endpoint=http://geth:8551
      - --accept-terms-of-use
      - --jwt-secret=/execution/jwtsecret
      - --suggested-fee-recipient=0x123463a4b065722e99115d6c222f267d9cabb524
      - --peer=/ip4/5.189.176.210/tcp/13000/p2p/16Uiu2HAmRHRJhnuWkwVasGDyUHMKdPbFhesh2CNzo921TVNprPwe
    depends_on:
      geth:
        condition: service_started
      # create-beacon-chain-genesis:
      #   condition: service_completed_successfully
    ports:
      - 4000:4000
      - 3500:3500
      - 8080:8080
      - 13000:13000
      - 12000:12000
    volumes:
      - ./consensus:/consensus
      - ./jwtsecret:/execution/jwtsecret

  # We run a validator client with 64, deterministically-generated keys that match
  # The validator keys present in the beacon chain genesis state generated a few steps above.
  validator:
    image: "gcr.io/prysmaticlabs/prysm/validator:latest"
    command:
      - --beacon-rpc-provider=beacon-chain:4000
      - --datadir=/consensus/validatordata
      - --accept-terms-of-use
      - --interop-num-validators=64
      - --interop-start-index=0
      - --chain-config-file=/consensus/config.yml
    depends_on:
      beacon-chain:
        condition: service_started
    volumes:
      - ./consensus:/consensus
